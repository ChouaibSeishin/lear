/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { importExcel } from '../fn/import-controller/import-excel';
import { ImportExcel$Params } from '../fn/import-controller/import-excel';
import { ImportReport } from '../models/import-report';

@Injectable({ providedIn: 'root' })
export class ImportControllerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `importExcel()` */
  static readonly ImportExcelPath = '/import/excel';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `importExcel()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  importExcel$Response(params?: ImportExcel$Params, context?: HttpContext): Observable<StrictHttpResponse<{
[key: string]: ImportReport;
}>> {
    return importExcel(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `importExcel$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  importExcel(params?: ImportExcel$Params, context?: HttpContext): Observable<{
[key: string]: ImportReport;
}> {
    return this.importExcel$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
[key: string]: ImportReport;
}>): {
[key: string]: ImportReport;
} => r.body)
    );
  }

}
